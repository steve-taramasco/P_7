{"remainingRequest":"/Users/steve/Git/Groupomania/front/node_modules/babel-loader/lib/index.js!/Users/steve/Git/Groupomania/front/node_modules/eslint-loader/index.js??ref--13-0!/Users/steve/Git/Groupomania/front/src/router/index.js","dependencies":[{"path":"/Users/steve/Git/Groupomania/front/src/router/index.js","mtime":1613002275000},{"path":"/Users/steve/Git/Groupomania/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/steve/Git/Groupomania/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/steve/Git/Groupomania/front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlUm91dGVyLCBjcmVhdGVXZWJIYXNoSGlzdG9yeSB9IGZyb20gJ3Z1ZS1yb3V0ZXInOwppbXBvcnQgSG9tZSBmcm9tICcuLi92aWV3cy9Ib21lLnZ1ZSc7CmltcG9ydCBTaWdudXAgZnJvbSAnLi4vdmlld3MvU2lnbnVwLnZ1ZSc7CmltcG9ydCBMb2dpbiBmcm9tICcuLi92aWV3cy9Mb2dpbi52dWUnOwppbXBvcnQgUG9zdERldGFpbHMgZnJvbSAnLi4vdmlld3MvcG9zdHMvUG9zdERldGFpbHMudnVlJzsKaW1wb3J0IFBvc3RzIGZyb20gJy4uL3ZpZXdzL3Bvc3RzL1Bvc3RzLnZ1ZSc7CmltcG9ydCBVc2VyIGZyb20gJy4uL3ZpZXdzL1VzZXIudnVlJzsKdmFyIHJvdXRlcyA9IFt7CiAgLy8gSG9tZQogIHBhdGg6ICcvJywKICBuYW1lOiAnSG9tZScsCiAgY29tcG9uZW50OiBIb21lCn0sIHsKICAvLyBVc2VycwogIHBhdGg6ICcvdXNlcnMvc2lnbnVwJywKICBuYW1lOiAnU2lnbnVwJywKICBjb21wb25lbnQ6IFNpZ251cAp9LCB7CiAgcGF0aDogJy91c2Vycy9sb2dpbicsCiAgbmFtZTogJ0xvZ2luJywKICBjb21wb25lbnQ6IExvZ2luCn0sIHsKICBwYXRoOiAiL3VzZXJzLzppZCIsCiAgbmFtZTogIlVzZXIiLAogIGNvbXBvbmVudDogVXNlciAvLywgbWV0YTogeyByZXF1aXJlc0F1dGg6IHRydWUgfSwKCn0sIHsKICAvLyBQb3N0cwogIHBhdGg6ICcvcG9zdHMnLAogIG5hbWU6ICdQb3N0cycsCiAgY29tcG9uZW50OiBQb3N0cwp9LCB7CiAgcGF0aDogJy9wb3N0cy86aWQnLAogIG5hbWU6ICdQb3N0RGV0YWlscycsCiAgY29tcG9uZW50OiBQb3N0RGV0YWlscywKICBwcm9wczogdHJ1ZQp9XTsKdmFyIHJvdXRlciA9IGNyZWF0ZVJvdXRlcih7CiAgaGlzdG9yeTogY3JlYXRlV2ViSGFzaEhpc3RvcnkoKSwKICByb3V0ZXM6IHJvdXRlcwp9KTsgLy8gcm91dGVyLmJlZm9yZUVhY2goKHRvLCBmcm9tLCBuZXh0KSA9PiB7Ci8vICAgaWYgKHRvLm5hbWUgIT09ICdsb2dpbicgJiYgIXJlcXVpcmVzQXV0aCkgbmV4dCh7IG5hbWU6ICdMb2dpbicgfSkKLy8gICBlbHNlIG5leHQoKQovLyB9KTsKCmV4cG9ydCBkZWZhdWx0IHJvdXRlcjs="},{"version":3,"sources":["/Users/steve/Git/Groupomania/front/src/router/index.js"],"names":["createRouter","createWebHashHistory","Home","Signup","Login","PostDetails","Posts","User","routes","path","name","component","props","router","history"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,oBAAvB,QAAmD,YAAnD;AAEA,OAAOC,IAAP,MAAwB,mBAAxB;AACA,OAAOC,MAAP,MAAwB,qBAAxB;AACA,OAAOC,KAAP,MAAwB,oBAAxB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,KAAP,MAAwB,0BAAxB;AACA,OAAOC,IAAP,MAAwB,mBAAxB;AAGA,IAAMC,MAAM,GAAG,CACb;AAAC;AACCC,EAAAA,IAAI,EAAE,GADR;AAEEC,EAAAA,IAAI,EAAE,MAFR;AAGEC,EAAAA,SAAS,EAAET;AAHb,CADa,EAMb;AAAE;AACAO,EAAAA,IAAI,EAAE,eADR;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,SAAS,EAAER;AAHb,CANa,EAWb;AACEM,EAAAA,IAAI,EAAE,cADR;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,SAAS,EAAEP;AAHb,CAXa,EAgBb;AACEK,EAAAA,IAAI,EAAE,YADR;AAEEC,EAAAA,IAAI,EAAE,MAFR;AAGEC,EAAAA,SAAS,EAAEJ,IAHb,CAGiB;;AAHjB,CAhBa,EAqBb;AAAE;AACAE,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,SAAS,EAAEL;AAHb,CArBa,EA0Bb;AACEG,EAAAA,IAAI,EAAE,YADR;AAEEC,EAAAA,IAAI,EAAE,aAFR;AAGEC,EAAAA,SAAS,EAAEN,WAHb;AAIEO,EAAAA,KAAK,EAAE;AAJT,CA1Ba,CAAf;AAkCA,IAAMC,MAAM,GAAGb,YAAY,CAAC;AAC1Bc,EAAAA,OAAO,EAAEb,oBAAoB,EADH;AAE1BO,EAAAA,MAAM,EAANA;AAF0B,CAAD,CAA3B,C,CAKA;AACA;AACA;AACA;;AAEA,eAAeK,MAAf","sourcesContent":["import { createRouter, createWebHashHistory } from 'vue-router'\n\nimport Home        from '../views/Home.vue'\nimport Signup      from '../views/Signup.vue'\nimport Login       from '../views/Login.vue'\nimport PostDetails from '../views/posts/PostDetails.vue'\nimport Posts       from '../views/posts/Posts.vue'\nimport User        from '../views/User.vue'\n\n\nconst routes = [\n  {// Home\n    path: '/',\n    name: 'Home',\n    component: Home\n  },\n  { // Users\n    path: '/users/signup',\n    name: 'Signup',\n    component: Signup\n  },\n  {\n    path: '/users/login',\n    name: 'Login',\n    component: Login\n  },\n  {\n    path: \"/users/:id\",\n    name: \"User\",\n    component: User//, meta: { requiresAuth: true },\n  },\n  { // Posts\n    path: '/posts',\n    name: 'Posts',\n    component: Posts\n  },\n  {\n    path: '/posts/:id',\n    name: 'PostDetails',\n    component: PostDetails,\n    props: true\n  }\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n})\n\n// router.beforeEach((to, from, next) => {\n//   if (to.name !== 'login' && !requiresAuth) next({ name: 'Login' })\n//   else next()\n// });\n\nexport default router\n"]}]}