{"remainingRequest":"/Users/steve/Git/Groupomania/front/node_modules/babel-loader/lib/index.js!/Users/steve/Git/Groupomania/front/node_modules/eslint-loader/index.js??ref--13-0!/Users/steve/Git/Groupomania/front/src/router/index.js","dependencies":[{"path":"/Users/steve/Git/Groupomania/front/src/router/index.js","mtime":1612996628993},{"path":"/Users/steve/Git/Groupomania/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/steve/Git/Groupomania/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/steve/Git/Groupomania/front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCB7IGNyZWF0ZVJvdXRlciwgY3JlYXRlV2ViSGFzaEhpc3RvcnkgfSBmcm9tICd2dWUtcm91dGVyJzsKaW1wb3J0IEhvbWUgZnJvbSAnLi4vdmlld3MvSG9tZS52dWUnOwppbXBvcnQgU2lnbnVwIGZyb20gJy4uL3ZpZXdzL1NpZ251cC52dWUnOwppbXBvcnQgTG9naW4gZnJvbSAnLi4vdmlld3MvTG9naW4udnVlJzsKaW1wb3J0IFBvc3REZXRhaWxzIGZyb20gJy4uL3ZpZXdzL3Bvc3RzL1Bvc3REZXRhaWxzLnZ1ZSc7CmltcG9ydCBQb3N0cyBmcm9tICcuLi92aWV3cy9wb3N0cy9Qb3N0cy52dWUnOwppbXBvcnQgc3RvcmUgZnJvbSAnLi4vc3RvcmUnOwp2YXIgcm91dGVzID0gW3sKICBwYXRoOiAnLycsCiAgbmFtZTogJ0hvbWUnLAogIGNvbXBvbmVudDogSG9tZQp9LCB7CiAgcGF0aDogJy91c2Vycy9zaWdudXAnLAogIG5hbWU6ICdTaWdudXAnLAogIGNvbXBvbmVudDogU2lnbnVwCn0sIHsKICBwYXRoOiAnL3VzZXJzL2xvZ2luJywKICBuYW1lOiAnTG9naW4nLAogIGNvbXBvbmVudDogTG9naW4KfSwgewogIHBhdGg6ICcvcG9zdHMnLAogIG5hbWU6ICdQb3N0cycsCiAgY29tcG9uZW50OiBQb3N0cwp9LCB7CiAgcGF0aDogJy9wb3N0cy86aWQnLAogIG5hbWU6ICdQb3N0RGV0YWlscycsCiAgY29tcG9uZW50OiBQb3N0RGV0YWlscywKICBwcm9wczogdHJ1ZQp9LCB7CiAgcGF0aDogIi91c2VyIiwKICBuYW1lOiAidXNlciIsCiAgY29tcG9uZW50OiBmdW5jdGlvbiBjb21wb25lbnQoKSB7CiAgICByZXR1cm4gaW1wb3J0KAogICAgLyogd2VicGFja0NodW5rTmFtZTogIlVzZXIiICovCiAgICAiLi9WaWV3cy9Vc2VyLnZ1ZSIpOwogIH0sCiAgbWV0YTogewogICAgcmVxdWlyZXNBdXRoOiB0cnVlCiAgfQp9XTsKdmFyIHJvdXRlciA9IGNyZWF0ZVJvdXRlcih7CiAgaGlzdG9yeTogY3JlYXRlV2ViSGFzaEhpc3RvcnkoKSwKICByb3V0ZXM6IHJvdXRlcwp9KTsKcm91dGVyLmJlZm9yZUVhY2goZnVuY3Rpb24gKHRvLCBmcm9tLCBuZXh0KSB7CiAgaWYgKHRvLm1ldGEucmVxdWlyZXNBdXRoKSB7CiAgICBpZiAoIXN0b3JlLnVzZXIudXNlcklkKSB7CiAgICAgIG5leHQoewogICAgICAgIG5hbWU6ICJsb2dpbiIKICAgICAgfSk7CiAgICB9IGVsc2UgewogICAgICBuZXh0KCk7CiAgICB9CiAgfSBlbHNlIHsKICAgIG5leHQoKTsKICB9Cn0pOwpleHBvcnQgZGVmYXVsdCByb3V0ZXI7"},{"version":3,"sources":["/Users/steve/Git/Groupomania/front/src/router/index.js"],"names":["createRouter","createWebHashHistory","Home","Signup","Login","PostDetails","Posts","store","routes","path","name","component","props","meta","requiresAuth","router","history","beforeEach","to","from","next","user","userId"],"mappings":";AAAA,SAASA,YAAT,EAAuBC,oBAAvB,QAAmD,YAAnD;AAEA,OAAOC,IAAP,MAAwB,mBAAxB;AACA,OAAOC,MAAP,MAAwB,qBAAxB;AACA,OAAOC,KAAP,MAAwB,oBAAxB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,KAAP,MAAwB,0BAAxB;AACA,OAAOC,KAAP,MAAwB,UAAxB;AAGA,IAAMC,MAAM,GAAG,CACb;AACEC,EAAAA,IAAI,EAAE,GADR;AAEEC,EAAAA,IAAI,EAAE,MAFR;AAGEC,EAAAA,SAAS,EAAET;AAHb,CADa,EAMb;AACEO,EAAAA,IAAI,EAAE,eADR;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,SAAS,EAAER;AAHb,CANa,EAWb;AACEM,EAAAA,IAAI,EAAE,cADR;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,SAAS,EAAEP;AAHb,CAXa,EAgBb;AACEK,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,SAAS,EAAEL;AAHb,CAhBa,EAqBb;AACEG,EAAAA,IAAI,EAAE,YADR;AAEEC,EAAAA,IAAI,EAAE,aAFR;AAGEC,EAAAA,SAAS,EAAEN,WAHb;AAIEO,EAAAA,KAAK,EAAE;AAJT,CArBa,EA4Bb;AACEH,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,IAAI,EAAE,MAFR;AAGEC,EAAAA,SAAS,EAAE;AAAA,WAAM;AAAO;AAA8B,sBAArC,CAAN;AAAA,GAHb;AAIEE,EAAAA,IAAI,EAAE;AAAEC,IAAAA,YAAY,EAAE;AAAhB;AAJR,CA5Ba,CAAf;AAoCA,IAAMC,MAAM,GAAGf,YAAY,CAAC;AAC1BgB,EAAAA,OAAO,EAAEf,oBAAoB,EADH;AAE1BO,EAAAA,MAAM,EAANA;AAF0B,CAAD,CAA3B;AAKAO,MAAM,CAACE,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACpC,MAAIF,EAAE,CAACL,IAAH,CAAQC,YAAZ,EAA0B;AACxB,QAAI,CAACP,KAAK,CAACc,IAAN,CAAWC,MAAhB,EAAwB;AACtBF,MAAAA,IAAI,CAAC;AAAEV,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAJ;AACD,KAFD,MAEO;AACLU,MAAAA,IAAI;AACL;AACF,GAND,MAMO;AACLA,IAAAA,IAAI;AACL;AACF,CAVD;AAYA,eAAeL,MAAf","sourcesContent":["import { createRouter, createWebHashHistory } from 'vue-router'\n\nimport Home        from '../views/Home.vue'\nimport Signup      from '../views/Signup.vue'\nimport Login       from '../views/Login.vue'\nimport PostDetails from '../views/posts/PostDetails.vue'\nimport Posts       from '../views/posts/Posts.vue'\nimport store       from '../store'\n\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Home',\n    component: Home\n  },\n  {\n    path: '/users/signup',\n    name: 'Signup',\n    component: Signup\n  },\n  {\n    path: '/users/login',\n    name: 'Login',\n    component: Login\n  },\n  {\n    path: '/posts',\n    name: 'Posts',\n    component: Posts\n  },\n  {\n    path: '/posts/:id',\n    name: 'PostDetails',\n    component: PostDetails,\n    props: true\n  },\n\n  {\n    path: \"/user\",\n    name: \"user\",\n    component: () => import(/* webpackChunkName: \"User\" */\"./Views/User.vue\" ),\n    meta: { requiresAuth: true }\n  }\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n})\n\nrouter.beforeEach((to, from, next) => {\n  if (to.meta.requiresAuth) {\n    if (!store.user.userId) {\n      next({ name: \"login\" });\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n});\n\nexport default router\n"]}]}