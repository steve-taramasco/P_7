{"remainingRequest":"/Users/steve/Git/Groupomania/front/node_modules/babel-loader/lib/index.js!/Users/steve/Git/Groupomania/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/steve/Git/Groupomania/front/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/steve/Git/Groupomania/front/src/views/posts/PostDetails.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/steve/Git/Groupomania/front/src/views/posts/PostDetails.vue","mtime":1612697901580},{"path":"/Users/steve/Git/Groupomania/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/steve/Git/Groupomania/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/steve/Git/Groupomania/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/steve/Git/Groupomania/front/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiBbJ2lkJ10sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBvc3Q6IG51bGwsCiAgICAgIGNvbW1lbnRzOiBbXSwKICAgICAgdXNlcklkOiBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCd1c2VySWQnKSwKICAgICAgdG9rZW46IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJyksCiAgICAgIG1lc3NhZ2U6IG51bGwKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5nZXRQb3N0KHRoaXMuaWQpOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0UG9zdDogZnVuY3Rpb24gZ2V0UG9zdChpZCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgYXhpb3MuZ2V0KCdodHRwOi8vbG9jYWxob3N0OjMwMDAvYXBpL3Bvc3RzLycgKyBpZCwgewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICJBdXRob3JpemF0aW9uIjogIkJlYXJlciAiLmNvbmNhdChzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpKQogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzdWx0cykgewogICAgICAgIF90aGlzLnBvc3QgPSByZXN1bHRzLmRhdGEucG9zdDsKICAgICAgICBfdGhpcy5jb21tZW50cyA9IHJlc3VsdHMuZGF0YS5wb3N0LmNvbW1lbnRzOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICByZXR1cm4gY29uc29sZS5sb2coZXJyb3IpOwogICAgICB9KTsKICAgIH0sCiAgICBzZW5kOiBmdW5jdGlvbiBzZW5kKGlkKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgYXhpb3MucG9zdCgnaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS9jb21tZW50cy8nICsgaWQsIHsKICAgICAgICBkYXRhOiB7CiAgICAgICAgICBjb21tZW50OiB0aGlzLm1lc3NhZ2UsCiAgICAgICAgICB1c2VySWQ6IHRoaXMudXNlcklkCiAgICAgICAgfQogICAgICB9LCB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgIkF1dGhvcml6YXRpb24iOiAiQmVhcmVyICIuY29uY2F0KHRoaXMudG9rZW4pCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczIubWVzc2FnZSA9IG51bGw7CgogICAgICAgIF90aGlzMi5nZXRQb3N0KGlkKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/steve/Git/Groupomania/front/src/views/posts/PostDetails.vue"],"names":[],"mappings":"AAmCA,OAAO,KAAP,MAAkB,OAAlB;AACA,eAAe;AACX,EAAA,KAAK,EAAE,CAAC,IAAD,CADI;AAEX,EAAA,IAFW,kBAEH;AACJ,WAAO;AACH,MAAA,IAAI,EAAE,IADH;AAEH,MAAA,QAAQ,EAAE,EAFP;AAGH,MAAA,MAAM,EAAE,cAAc,CAAC,OAAf,CAAuB,QAAvB,CAHL;AAIH,MAAA,KAAI,EAAI,cAAc,CAAC,OAAf,CAAuB,OAAvB,CAJL;AAKH,MAAA,OAAO,EAAE;AALN,KAAP;AAOH,GAVU;AAWX,EAAA,OAXW,qBAWA;AACP,SAAK,OAAL,CAAa,KAAK,EAAlB;AACH,GAbU;AAeX,EAAA,OAAO,EAAE;AACL,IAAA,OADK,mBACG,EADH,EACO;AAAA;;AACR,MAAA,KAAK,CAAC,GAAN,CAAU,qCAAqC,EAA/C,EAAmD;AAC/C,QAAA,OAAO,EAAE;AAAE,4CAA4B,cAAc,CAAC,OAAf,CAAuB,OAAvB,CAA5B;AAAF;AADsC,OAAnD,EAGC,IAHD,CAGM,UAAA,OAAM,EAAK;AACjB,QAAA,KAAI,CAAC,IAAL,GAAY,OAAO,CAAC,IAAR,CAAa,IAAzB;AACA,QAAA,KAAI,CAAC,QAAL,GAAgB,OAAO,CAAC,IAAR,CAAa,IAAb,CAAkB,QAAlC;AACC,OAND,EAOC,KAPD,CAOO,UAAA,KAAI;AAAA,eAAK,OAAO,CAAC,GAAR,CAAY,KAAZ,CAAL;AAAA,OAPX;AAQH,KAVI;AAYL,IAAA,IAZK,gBAYA,EAZA,EAYI;AAAA;;AACL,MAAA,KAAK,CAAC,IAAN,CAAW,wCAAwC,EAAnD,EACA;AACI,QAAA,IAAI,EAAE;AACF,UAAA,OAAO,EAAE,KAAK,OADZ;AAEF,UAAA,MAAM,EAAE,KAAK;AAFX;AADV,OADA,EAOA;AACI,QAAA,OAAO,EAAE;AAAE,4CAA6B,KAAK,KAAlC;AAAF;AADb,OAPA,EAUC,IAVD,CAUM,YAAM;AACR,QAAA,MAAI,CAAC,OAAL,GAAe,IAAf;;AACA,QAAA,MAAI,CAAC,OAAL,CAAa,EAAb;AACH,OAbD,EAcC,KAdD,CAcO,UAAA,KAAI;AAAA,eAAK,OAAO,CAAC,GAAR,CAAY,KAAZ,CAAL;AAAA,OAdX;AAeJ;AA5BK;AAfE,CAAf","sourcesContent":["<template>\n\n    <div v-if=\"post\">\n        <div class=\"posts\">\n            <div class=\"user\">\n                <ion-icon name=\"person-circle-outline\" class=\"icon\"></ion-icon>\n                <p v-if=\"post.user\">@ {{ post.user.username }}</p>\n                <p v-else>@ inconnu</p>\n            </div>\n            <div class=\"post\">\n                <p>{{ post.message }}</p>\n            </div>\n        </div>\n        \n        <div class=\"comments\" v-for=\"comment in comments\" :key= comment>\n            <div class=\"user\">\n                <ion-icon name=\"person-circle-outline\" class=\"icon\"></ion-icon>\n                <p>@ {{ comment.userId }}</p>\n            </div>\n            <div class=\"comment\">\n                <p>{{ comment.message }}</p>\n            </div>\n        </div>\n        <form>\n            <input type=\"text\" v-model=\"message\" placeholder=\"commentaire...\">\n            <button type=\"button\" @click=\"send(id)\">Envoyer</button>\n        </form> \n    </div>\n\n    <div v-else>\n        <p>loading...</p>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n    props: ['id'],\n    data () {\n        return {\n            post: null,\n            comments: [],\n            userId: sessionStorage.getItem('userId'),\n            token : sessionStorage.getItem('token'),\n            message: null\n        }\n    },\n    mounted () {\n        this.getPost(this.id);\n    },\n\n    methods: {\n        getPost(id) {\n            axios.get('http://localhost:3000/api/posts/' + id, {\n                headers: { \"Authorization\" : `Bearer ${sessionStorage.getItem('token')}` }\n            })\n            .then(results => {\n            this.post = results.data.post;\n            this.comments = results.data.post.comments;\n            })\n            .catch(error => console.log(error))\n        },\n\n        send(id) {\n            axios.post('http://localhost:3000/api/comments/' + id,\n            {\n                data: {\n                    comment: this.message,\n                    userId: this.userId\n                }\n            },\n            {\n                headers: { \"Authorization\" : `Bearer ${ this.token }` }\n            })\n            .then(() => {\n                this.message = null;\n                this.getPost(id);\n            })\n            .catch(error => console.log(error));  \n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n.posts {\n    display: flex;\n    margin: 3em 0;\n    padding: 1em;\n    .user {\n        flex: 1;\n    }\n    .post {\n      flex: 3;\n      background-color: lightgrey;\n      border-radius: 10px;\n      cursor: pointer;\n      p:nth-child(1) {\n        font-weight: bold;\n      }\n    }\n}\n.comments {\n    display: flex;\n    padding: 1em;\n    margin-bottom: 4em;\n    .user {\n        flex: 1;\n        p {\n            margin: 0;\n        }\n    }\n    .comment {\n      flex: 3;\n      background-color: whitesmoke;\n      border-radius: 10px;\n      cursor: pointer;\n      p:nth-child(1) {\n        font-weight: bold;\n      }\n    }\n}\n\n.icon {\n    width: 3em;\n    height: 3em;\n\n}\n\nform {\n  padding: 1em;\n  border-top: solid 2px lightgrey;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  background: white;\n  width: -webkit-fill-available;\n  input {\n      margin-right: 2em;\n      padding: .3em 1em;\n      width: 15em;\n      border-radius: 4px;\n      border: 1px solid darkgray;\n      &:focus {\n          outline: none;\n          box-shadow: 0px 0px 5px darkgrey;\n      }\n  }\n}\n</style>\n\n"],"sourceRoot":""}]}