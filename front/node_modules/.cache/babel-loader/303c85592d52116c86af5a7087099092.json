{"remainingRequest":"/Users/steve/Git/Groupomania/front/node_modules/babel-loader/lib/index.js!/Users/steve/Git/Groupomania/front/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/steve/Git/Groupomania/front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/steve/Git/Groupomania/front/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/steve/Git/Groupomania/front/src/views/posts/PostDetails.vue?vue&type=template&id=5f9a4f7c&scoped=true","dependencies":[{"path":"/Users/steve/Git/Groupomania/front/src/views/posts/PostDetails.vue","mtime":1613142244442},{"path":"/Users/steve/Git/Groupomania/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/steve/Git/Groupomania/front/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/steve/Git/Groupomania/front/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/steve/Git/Groupomania/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/steve/Git/Groupomania/front/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgdG9EaXNwbGF5U3RyaW5nIGFzIF90b0Rpc3BsYXlTdHJpbmcsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUsIHJlbmRlckxpc3QgYXMgX3JlbmRlckxpc3QsIEZyYWdtZW50IGFzIF9GcmFnbWVudCwgdk1vZGVsVGV4dCBhcyBfdk1vZGVsVGV4dCwgd2l0aERpcmVjdGl2ZXMgYXMgX3dpdGhEaXJlY3RpdmVzLCB3aXRoU2NvcGVJZCBhcyBfd2l0aFNjb3BlSWQsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhJZCA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoImRhdGEtdi01ZjlhNGY3YyIpOwoKX3B1c2hTY29wZUlkKCJkYXRhLXYtNWY5YTRmN2MiKTsKCnZhciBfaG9pc3RlZF8xID0gewogIGtleTogMAp9Owp2YXIgX2hvaXN0ZWRfMiA9IHsKICBjbGFzczogInBvc3RzIgp9Owp2YXIgX2hvaXN0ZWRfMyA9IHsKICBjbGFzczogInVzZXIiCn07CnZhciBfaG9pc3RlZF80ID0gewogIGtleTogMAp9Owp2YXIgX2hvaXN0ZWRfNSA9IHsKICBrZXk6IDEKfTsKdmFyIF9ob2lzdGVkXzYgPSB7CiAgY2xhc3M6ICJwb3N0Igp9Owp2YXIgX2hvaXN0ZWRfNyA9IHsKICBjbGFzczogInVzZXIiCn07CnZhciBfaG9pc3RlZF84ID0gewogIGNsYXNzOiAiY29tbWVudCIKfTsKdmFyIF9ob2lzdGVkXzkgPSB7CiAga2V5OiAxCn07Cgp2YXIgX2hvaXN0ZWRfMTAgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJwIiwgbnVsbCwgImxvYWRpbmcuLi4iLCAtMQovKiBIT0lTVEVEICovCik7CgpfcG9wU2NvcGVJZCgpOwoKZXhwb3J0IHZhciByZW5kZXIgPSAvKiNfX1BVUkVfXyovX3dpdGhJZChmdW5jdGlvbiAoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgcmV0dXJuICRkYXRhLnBvc3QgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIFtfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzIsIFtfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzMsIFskZGF0YS5wb3N0LnVzZXIgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soInAiLCBfaG9pc3RlZF80LCAiQCAiICsgX3RvRGlzcGxheVN0cmluZygkZGF0YS5wb3N0LnVzZXIudXNlcm5hbWUpLCAxCiAgLyogVEVYVCAqLwogICkpIDogKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJwIiwgX2hvaXN0ZWRfNSwgIkAgaW5jb25udSIpKV0pLCBfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzYsIFtfY3JlYXRlVk5vZGUoInAiLCBudWxsLCBfdG9EaXNwbGF5U3RyaW5nKCRkYXRhLnBvc3QubWVzc2FnZSksIDEKICAvKiBURVhUICovCiAgKV0pXSksIChfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlQmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdCgkZGF0YS5jb21tZW50cywgZnVuY3Rpb24gKGNvbW1lbnQpIHsKICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZGl2IiwgewogICAgICBjbGFzczogImNvbW1lbnRzIiwKICAgICAga2V5OiBjb21tZW50CiAgICB9LCBbX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF83LCBbX2NyZWF0ZVZOb2RlKCJwIiwgbnVsbCwgIkAgIiArIF90b0Rpc3BsYXlTdHJpbmcoY29tbWVudC51c2VySWQpLCAxCiAgICAvKiBURVhUICovCiAgICApXSksIF9jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfOCwgW19jcmVhdGVWTm9kZSgicCIsIG51bGwsIF90b0Rpc3BsYXlTdHJpbmcoY29tbWVudC5tZXNzYWdlKSwgMQogICAgLyogVEVYVCAqLwogICAgKV0pXSk7CiAgfSksIDEyOAogIC8qIEtFWUVEX0ZSQUdNRU5UICovCiAgKSksIF9jcmVhdGVWTm9kZSgiZm9ybSIsIG51bGwsIFtfd2l0aERpcmVjdGl2ZXMoX2NyZWF0ZVZOb2RlKCJpbnB1dCIsIHsKICAgIHR5cGU6ICJ0ZXh0IiwKICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogX2NhY2hlWzFdIHx8IChfY2FjaGVbMV0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkZGF0YS5tZXNzYWdlID0gJGV2ZW50OwogICAgfSksCiAgICBwbGFjZWhvbGRlcjogImNvbW1lbnRhaXJlLi4uIgogIH0sIG51bGwsIDUxMgogIC8qIE5FRURfUEFUQ0ggKi8KICApLCBbW192TW9kZWxUZXh0LCAkZGF0YS5tZXNzYWdlXV0pLCBfY3JlYXRlVk5vZGUoImJ1dHRvbiIsIHsKICAgIHR5cGU6ICJidXR0b24iLAogICAgb25DbGljazogX2NhY2hlWzJdIHx8IChfY2FjaGVbMl0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5zZW5kKCRwcm9wcy5pZCk7CiAgICB9KQogIH0sICJFbnZveWVyIildKV0pKSA6IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZGl2IiwgX2hvaXN0ZWRfOSwgW19ob2lzdGVkXzEwXSkpOwp9KTs="},{"version":3,"sources":["/Users/steve/Git/Groupomania/front/src/views/posts/PostDetails.vue"],"names":[],"mappings":";;;;;;;;;;AAIa,EAAA,KAAK,EAAC;;;AACF,EAAA,KAAK,EAAC;;;;;;;;;AAIN,EAAA,KAAK,EAAC;;;AAMN,EAAA,KAAK,EAAC;;;AAGN,EAAA,KAAK,EAAC;;;;;;+BAYf,YAAA,CAAiB,GAAjB,EAAiB,IAAjB,EAAG,YAAH,EAAa,CAAA;AAAA;AAAb,C;;;;;SA5BO,KAAA,CAAA,I,kBAAX,YAAA,CAyBM,KAzBN,EAyBM,UAzBN,EAyBM,CAvBF,YAAA,CAQM,KARN,EAAA,UAAA,EAQM,CAPF,YAAA,CAGM,KAHN,EAAA,UAAA,EAGM,CAFO,KAAA,CAAA,IAAA,CAAK,I,kBAAd,YAAA,CAAkD,GAAlD,EAAkD,UAAlD,EAAoB,OAAE,gBAAA,CAAG,KAAA,CAAA,IAAA,CAAK,IAAL,CAAU,QAAb,CAAtB,EAA2C;AAAA;AAA3C,G,mBACA,YAAA,CAAuB,GAAvB,EAAuB,UAAvB,EAAU,WAAV,C,CACE,CAHN,CAOE,EAHF,YAAA,CAEM,KAFN,EAAA,UAAA,EAEM,CADF,YAAA,CAAyB,GAAzB,EAAyB,IAAzB,EAAyB,gBAAA,CAAnB,KAAA,CAAA,IAAA,CAAK,OAAc,CAAzB,EAAkB;AAAA;AAAlB,GACE,CAFN,CAGE,CARN,CAuBE,G,kBAbF,YAAA,CAOM,SAPN,EAOM,IAPN,EAOM,WAAA,CAPkC,KAAA,CAAA,QAOlC,EAP0C,UAAnB,OAAmB,EAAZ;yBAApC,YAAA,CAOM,KAPN,EAOM;AAPD,MAAA,KAAK,EAAC,UAOL;AAP6C,MAAA,GAAG,EAAE;AAOlD,KAPN,E,CACI,YAAA,CAEM,KAFN,EAAA,UAAA,EAEM,CADF,YAAA,CAA6B,GAA7B,EAA6B,IAA7B,EAAG,OAAE,gBAAA,CAAG,OAAO,CAAC,MAAX,CAAL,EAAsB;AAAA;AAAtB,KACE,CAFN,C,EAGA,YAAA,CAEM,KAFN,EAAA,UAAA,EAEM,CADF,YAAA,CAA4B,GAA5B,EAA4B,IAA5B,EAA4B,gBAAA,CAAtB,OAAO,CAAC,OAAc,CAA5B,EAAqB;AAAA;AAArB,KACE,CAFN,C,CAJJ,C;GAOM,CAPN,E;;AAAA,GAaE,GAJF,YAAA,CAGO,MAHP,EAGO,IAHP,EAGO,C,gBAFH,YAAA,CAAkE,OAAlE,EAAkE;AAA3D,IAAA,IAAI,EAAC,MAAsD;;aAAtC,KAAA,CAAA,OAAA,GAAO,M;MAA+B;AAA7B,IAAA,WAAW,EAAC;AAAiB,GAAlE,E,IAAA,E;;AAAA,G,iBAA4B,KAAA,CAAA,O,GAEzB,EADH,YAAA,CAAwD,QAAxD,EAAwD;AAAhD,IAAA,IAAI,EAAC,QAA2C;AAAjC,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,QAAA,CAAA,IAAA,CAAK,MAAA,CAAA,EAAL,CAAF;AAAA,KAAA;AAA4B,GAAxD,EAAwC,SAAxC,CACG,CAHP,CAIE,CAzBN,C,mBA2BA,YAAA,CAEM,KAFN,EAEM,UAFN,EAEM,CADF,WACE,CAFN,C","sourcesContent":["<template>\n\n    <div v-if=\"post\">\n\n        <div class=\"posts\">\n            <div class=\"user\">\n                <p v-if=\"post.user\">@ {{ post.user.username }}</p>\n                <p v-else>@ inconnu</p>\n            </div>\n            <div class=\"post\">\n                <p>{{ post.message }}</p>\n            </div>\n        </div>\n        \n        <div class=\"comments\" v-for=\"comment in comments\" :key= comment>\n            <div class=\"user\">\n                <p>@ {{ comment.userId }}</p>\n            </div>\n            <div class=\"comment\">\n                <p>{{ comment.message }}</p>\n            </div>\n        </div>\n\n        <form>\n            <input type=\"text\" v-model=\"message\" placeholder=\"commentaire...\">\n            <button type=\"button\" @click=\"send(id)\">Envoyer</button>\n        </form> \n    </div>\n\n    <div v-else>\n        <p>loading...</p>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { mapState } from 'vuex';\n\nexport default {\n\n    data () {\n        return {\n            post: null,\n            comments: [],\n            message: null\n        }\n    },\n     mounted () {\n        this.getPost(this.id);\n    },\n    props: ['id'],\n\n    computed: {\n        ...mapState(['user'])\n    },\n\n    methods: {\n\n        getPost(id) {\n            axios.get('http://localhost:3000/api/posts/' + id, {\n                headers: { \"Authorization\" : `Bearer ${ this.user.token }` }\n            })\n            .then(results => {\n                console.log(results),\n                this.post = results.data.post;\n                this.comments = results.data.post.comments;\n            })\n            .catch(error => console.log(error))\n        },\n\n        send(id) {\n            axios.post('http://localhost:3000/api/comments/' + id,\n            {\n                data: {\n                    comment: this.message,\n                    userId: this.userId\n                }\n            },\n            {\n                headers: { \"Authorization\" : `Bearer ${ this.token }` }\n            })\n            .then(() => {\n                this.message = null;\n                this.getPost(id);\n            })\n            .catch(error => console.log(error));  \n        }\n    }\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n\n.posts {\n    display: flex;\n    margin: 3em 0;\n    padding: 1em;\n    .user {\n        flex: 1;\n        p {\n            margin: 0;\n        }\n    }\n    .post {\n      flex: 3;\n      background-color: lightgrey;\n      border-radius: 10px;\n      cursor: pointer;\n      p:nth-child(1) {\n        font-weight: bold;\n      }\n    }\n}\n.comments {\n    display: flex;\n    padding: 1em;\n    margin-bottom: 4em;\n    .user {\n        flex: 1;\n        p {\n            margin: 0;\n        }\n    }\n    .comment {\n      flex: 3;\n      background-color: whitesmoke;\n      border-radius: 10px;\n      cursor: pointer;\n      p:nth-child(1) {\n        font-weight: bold;\n      }\n    }\n}\n\n.icon {\n    width: 3em;\n    height: 3em;\n\n}\n\nform {\n  padding: 1em;\n  border-top: solid 2px lightgrey;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  background: white;\n  width: -webkit-fill-available;\n  input {\n      margin-right: 2em;\n      padding: .3em 1em;\n      width: 15em;\n      border-radius: 4px;\n      border: 1px solid darkgray;\n      &:focus {\n          outline: none;\n          box-shadow: 0px 0px 5px darkgrey;\n      }\n  }\n}\n</style>\n\n"],"sourceRoot":""}]}