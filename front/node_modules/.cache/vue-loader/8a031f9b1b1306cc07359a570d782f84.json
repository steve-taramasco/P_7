{"remainingRequest":"/Users/steve/Git/Groupomania/front/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/steve/Git/Groupomania/front/src/views/posts/PostDetails.vue?vue&type=style&index=0&id=5f9a4f7c&lang=scss&scoped=true","dependencies":[{"path":"/Users/steve/Git/Groupomania/front/src/views/posts/PostDetails.vue","mtime":1613142244442},{"path":"/Users/steve/Git/Groupomania/front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/steve/Git/Groupomania/front/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/Users/steve/Git/Groupomania/front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/steve/Git/Groupomania/front/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/steve/Git/Groupomania/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/steve/Git/Groupomania/front/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoucG9zdHMgewogICAgZGlzcGxheTogZmxleDsKICAgIG1hcmdpbjogM2VtIDA7CiAgICBwYWRkaW5nOiAxZW07CiAgICAudXNlciB7CiAgICAgICAgZmxleDogMTsKICAgICAgICBwIHsKICAgICAgICAgICAgbWFyZ2luOiAwOwogICAgICAgIH0KICAgIH0KICAgIC5wb3N0IHsKICAgICAgZmxleDogMzsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmV5OwogICAgICBib3JkZXItcmFkaXVzOiAxMHB4OwogICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAgIHA6bnRoLWNoaWxkKDEpIHsKICAgICAgICBmb250LXdlaWdodDogYm9sZDsKICAgICAgfQogICAgfQp9Ci5jb21tZW50cyB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgcGFkZGluZzogMWVtOwogICAgbWFyZ2luLWJvdHRvbTogNGVtOwogICAgLnVzZXIgewogICAgICAgIGZsZXg6IDE7CiAgICAgICAgcCB7CiAgICAgICAgICAgIG1hcmdpbjogMDsKICAgICAgICB9CiAgICB9CiAgICAuY29tbWVudCB7CiAgICAgIGZsZXg6IDM7CiAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7CiAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7CiAgICAgIGN1cnNvcjogcG9pbnRlcjsKICAgICAgcDpudGgtY2hpbGQoMSkgewogICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogICAgICB9CiAgICB9Cn0KCi5pY29uIHsKICAgIHdpZHRoOiAzZW07CiAgICBoZWlnaHQ6IDNlbTsKCn0KCmZvcm0gewogIHBhZGRpbmc6IDFlbTsKICBib3JkZXItdG9wOiBzb2xpZCAycHggbGlnaHRncmV5OwogIHBvc2l0aW9uOiBmaXhlZDsKICBib3R0b206IDA7CiAgbGVmdDogMDsKICBiYWNrZ3JvdW5kOiB3aGl0ZTsKICB3aWR0aDogLXdlYmtpdC1maWxsLWF2YWlsYWJsZTsKICBpbnB1dCB7CiAgICAgIG1hcmdpbi1yaWdodDogMmVtOwogICAgICBwYWRkaW5nOiAuM2VtIDFlbTsKICAgICAgd2lkdGg6IDE1ZW07CiAgICAgIGJvcmRlci1yYWRpdXM6IDRweDsKICAgICAgYm9yZGVyOiAxcHggc29saWQgZGFya2dyYXk7CiAgICAgICY6Zm9jdXMgewogICAgICAgICAgb3V0bGluZTogbm9uZTsKICAgICAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggNXB4IGRhcmtncmV5OwogICAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["/Users/steve/Git/Groupomania/front/src/views/posts/PostDetails.vue"],"names":[],"mappings":"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","file":"/Users/steve/Git/Groupomania/front/src/views/posts/PostDetails.vue","sourceRoot":"","sourcesContent":["<template>\n\n    <div v-if=\"post\">\n\n        <div class=\"posts\">\n            <div class=\"user\">\n                <p v-if=\"post.user\">@ {{ post.user.username }}</p>\n                <p v-else>@ inconnu</p>\n            </div>\n            <div class=\"post\">\n                <p>{{ post.message }}</p>\n            </div>\n        </div>\n        \n        <div class=\"comments\" v-for=\"comment in comments\" :key= comment>\n            <div class=\"user\">\n                <p>@ {{ comment.userId }}</p>\n            </div>\n            <div class=\"comment\">\n                <p>{{ comment.message }}</p>\n            </div>\n        </div>\n\n        <form>\n            <input type=\"text\" v-model=\"message\" placeholder=\"commentaire...\">\n            <button type=\"button\" @click=\"send(id)\">Envoyer</button>\n        </form> \n    </div>\n\n    <div v-else>\n        <p>loading...</p>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { mapState } from 'vuex';\n\nexport default {\n\n    data () {\n        return {\n            post: null,\n            comments: [],\n            message: null\n        }\n    },\n     mounted () {\n        this.getPost(this.id);\n    },\n    props: ['id'],\n\n    computed: {\n        ...mapState(['user'])\n    },\n\n    methods: {\n\n        getPost(id) {\n            axios.get('http://localhost:3000/api/posts/' + id, {\n                headers: { \"Authorization\" : `Bearer ${ this.user.token }` }\n            })\n            .then(results => {\n                console.log(results),\n                this.post = results.data.post;\n                this.comments = results.data.post.comments;\n            })\n            .catch(error => console.log(error))\n        },\n\n        send(id) {\n            axios.post('http://localhost:3000/api/comments/' + id,\n            {\n                data: {\n                    comment: this.message,\n                    userId: this.userId\n                }\n            },\n            {\n                headers: { \"Authorization\" : `Bearer ${ this.token }` }\n            })\n            .then(() => {\n                this.message = null;\n                this.getPost(id);\n            })\n            .catch(error => console.log(error));  \n        }\n    }\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n\n.posts {\n    display: flex;\n    margin: 3em 0;\n    padding: 1em;\n    .user {\n        flex: 1;\n        p {\n            margin: 0;\n        }\n    }\n    .post {\n      flex: 3;\n      background-color: lightgrey;\n      border-radius: 10px;\n      cursor: pointer;\n      p:nth-child(1) {\n        font-weight: bold;\n      }\n    }\n}\n.comments {\n    display: flex;\n    padding: 1em;\n    margin-bottom: 4em;\n    .user {\n        flex: 1;\n        p {\n            margin: 0;\n        }\n    }\n    .comment {\n      flex: 3;\n      background-color: whitesmoke;\n      border-radius: 10px;\n      cursor: pointer;\n      p:nth-child(1) {\n        font-weight: bold;\n      }\n    }\n}\n\n.icon {\n    width: 3em;\n    height: 3em;\n\n}\n\nform {\n  padding: 1em;\n  border-top: solid 2px lightgrey;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  background: white;\n  width: -webkit-fill-available;\n  input {\n      margin-right: 2em;\n      padding: .3em 1em;\n      width: 15em;\n      border-radius: 4px;\n      border: 1px solid darkgray;\n      &:focus {\n          outline: none;\n          box-shadow: 0px 0px 5px darkgrey;\n      }\n  }\n}\n</style>\n\n"]}]}