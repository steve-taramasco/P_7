{"remainingRequest":"/Users/steve/Git/Groupomania/front/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/steve/Git/Groupomania/front/src/views/posts/Posts.vue?vue&type=style&index=0&id=5284a266&lang=scss&scoped=true","dependencies":[{"path":"/Users/steve/Git/Groupomania/front/src/views/posts/Posts.vue","mtime":1612914113894},{"path":"/Users/steve/Git/Groupomania/front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/steve/Git/Groupomania/front/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/Users/steve/Git/Groupomania/front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/steve/Git/Groupomania/front/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/steve/Git/Groupomania/front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/steve/Git/Groupomania/front/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jb250ZW50IHsKICBtYXJnaW4tYm90dG9tOiA1ZW07Cn0KCi5wb3N0cyB7CiAgZGlzcGxheTogZmxleDsKICBtYXJnaW46IDNlbSAwOwogIC51c2VyIHsKICAgIGZsZXg6IDE7CiAgICBtYXJnaW46IDVweDsKCiAgICBwIHsKICAgICAgICBtYXJnaW46IDA7CiAgICAgIH0KICAgIC5pY29uIHsKICAgICAgd2lkdGg6IDNlbTsKICAgICAgaGVpZ2h0OiAzZW07CiAgICB9CiAgfQoKICAucG9zdCB7CiAgICBmbGV4OiAzOwoKICAgIC5idWxsZSB7CiAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7CiAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7CiAgICAgIG1hcmdpbjogNXB4OwogICAgICBwYWRkaW5nOiAuNGVtOwoKICAgICAgcDpudGgtY2hpbGQoMSkgewogICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogICAgICB9CiAgICAgIGEgewogICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKICAgICAgICBjb2xvcjogaW5oZXJpdDsKICAgICAgfQogICAgICAmOmhvdmVyIHsKICAgICAgICBtYXJnaW46IDVweDsKICAgICAgICBib3gtc2hhZG93OiAwcHggMHB4IDEwcHggMXB4IGRhcmtncmV5OwogICAgICB9CiAgICB9CiAgfQogIC50aW1lIHsKICAgIGZsZXg6IDE7CiAgfQp9Cgpmb3JtIHsKICBwYWRkaW5nOiAxZW07CiAgYm9yZGVyLXRvcDogc29saWQgMnB4IGxpZ2h0Z3JleTsKICBwb3NpdGlvbjogZml4ZWQ7CiAgYm90dG9tOiAwOwogIGxlZnQ6IDA7CiAgYmFja2dyb3VuZDogd2hpdGU7CiAgd2lkdGg6IC13ZWJraXQtZmlsbC1hdmFpbGFibGU7CiAgaW5wdXQgewogICAgICBtYXJnaW4tcmlnaHQ6IDJlbTsKICAgICAgcGFkZGluZzogLjNlbSAxZW07CiAgICAgIHdpZHRoOiAxNWVtOwogICAgICBib3JkZXItcmFkaXVzOiA0cHg7CiAgICAgIGJvcmRlcjogMXB4IHNvbGlkIGRhcmtncmF5OwogICAgICAmOmZvY3VzIHsKICAgICAgICAgIG91dGxpbmU6IG5vbmU7CiAgICAgICAgICBib3gtc2hhZG93OiAwcHggMHB4IDVweCBkYXJrZ3JleTsKICAgICAgfQogIH0KfQo="},{"version":3,"sources":["/Users/steve/Git/Groupomania/front/src/views/posts/Posts.vue"],"names":[],"mappings":"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","file":"/Users/steve/Git/Groupomania/front/src/views/posts/Posts.vue","sourceRoot":"","sourcesContent":["<template>\n\n  <div class=\"content\" v-if=\"posts\">\n    <div class=\"posts\" v-for=\"post in posts\" :key=\"post\">\n\n      <div class=\"user\">\n        <ion-icon name=\"person-circle-outline\" class=\"icon\"></ion-icon>\n        <p v-if=\"post.user\">@ {{ post.user.username }}</p>\n        <p v-else>@ inconnu</p>\n      </div>\n\n      <div class=\"post\">\n        <div class=\"bulle\">\n          <p>{{ post.message }}</p>\n          <p>\n            <router-link :to=\"{ name: 'PostDetails', params: { id: post.id }}\">\n              <span class=\"comments\">{{ post.comments.length }}</span>\n              commentaires \n            </router-link>\n            \n            <span class=\"trash\" @click=\"trash(post.id)\">suppr.</span>\n          </p>\n        </div>\n      </div>\n      <div class=\"time\">\n          {{ post.createdAt }}\n      </div>\n      \n    </div>\n    <form>\n        <input type=\"text\" v-model=\"message\" placeholder=\"message...\">\n        <button type=\"button\" @click=\"send\">Envoyer</button>\n    </form> \n  </div>\n\n  <div class=\"loading\" v-else>\n    <p>loading...</p>\n     <form>\n        <input type=\"text\" v-model=\"message\" placeholder=\"message...\">\n        <button type=\"button\" @click=\"send\">Envoyer</button>\n    </form> \n  </div>\n\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n  name: 'Post',\n  data () {\n    return {\n      posts: null,\n      message: null,\n      userId: sessionStorage.getItem('userId'),\n      token : sessionStorage.getItem('token'),\n    }\n  },\n\n  mounted () {\n    this.getPosts(),\n    console.log(this.posts)\n  },\n\n\n  methods: {\n\n    getDate(date) {\n      let date_formater = new Date(date).toISOString().slice(0, 19).replace('T', ' ');\n      return date_formater;\n    },\n\n    getPosts() {\n      axios.get('http://localhost:3000/api/posts/',\n      {\n        headers: { \"Authorization\" : `Bearer ${ this.token }` }\n      })\n      .then(res => {\n        this.posts = res.data.posts;\n\n        let date = this.posts[0].createdAt;\n        console.log(date),\n        console.log(this.getDate(date))\n      })\n      .catch(error => console.log(error));\n    },\n\n    trash(id) {\n      axios.delete('http://localhost:3000/api/posts/' + id,\n      {\n          headers: { \"Authorization\" : `Bearer ${ this.token }` }\n      })\n      .then(() => this.getPosts())\n      .catch(error => console.log(error));\n    },\n    \n    send() {\n      axios.post('http://localhost:3000/api/posts/',\n      {\n        data: {\n          message: this.message,\n          userId: this.userId\n        }\n      },\n      {\n        headers: { \"Authorization\" : `Bearer ${ this.token }` }\n      })\n      .then(() => { this.message = null, this.getPosts() })\n      .catch(error => console.log(error));   \n    }\n\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.content {\n  margin-bottom: 5em;\n}\n\n.posts {\n  display: flex;\n  margin: 3em 0;\n  .user {\n    flex: 1;\n    margin: 5px;\n\n    p {\n        margin: 0;\n      }\n    .icon {\n      width: 3em;\n      height: 3em;\n    }\n  }\n\n  .post {\n    flex: 3;\n\n    .bulle {\n      background-color: whitesmoke;\n      border-radius: 10px;\n      margin: 5px;\n      padding: .4em;\n\n      p:nth-child(1) {\n        font-weight: bold;\n      }\n      a {\n        text-decoration: none;\n        color: inherit;\n      }\n      &:hover {\n        margin: 5px;\n        box-shadow: 0px 0px 10px 1px darkgrey;\n      }\n    }\n  }\n  .time {\n    flex: 1;\n  }\n}\n\nform {\n  padding: 1em;\n  border-top: solid 2px lightgrey;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  background: white;\n  width: -webkit-fill-available;\n  input {\n      margin-right: 2em;\n      padding: .3em 1em;\n      width: 15em;\n      border-radius: 4px;\n      border: 1px solid darkgray;\n      &:focus {\n          outline: none;\n          box-shadow: 0px 0px 5px darkgrey;\n      }\n  }\n}\n</style>"]}]}